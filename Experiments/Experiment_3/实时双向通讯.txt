import socket
import threading
import time
import re

Clients = {}


def tcpLink(clientSocket, addr):
    # 保存各个名字的客户端套接字
    frName = clientSocket.recv(1024).decode('utf-8')
    Clients[frName] = clientSocket
    print('地址为%s:%d, 名字为%s的客户端已链接' % (addr[0], addr[1], frName))

    # 给每一个客户端发送消息有那些人上线了
    for client in Clients.values():
        name_list = ''
        for c_name in Clients.keys():
            name_list += c_name + ' '
        info_data = name_list + '在线' + '共%d人在线' % len(Clients)
        client.send(info_data.encode('utf-8'))
    print(info_data)

    while True:
        data = clientSocket.recv(1024)
        data = data.decode('utf-8')
        print('转发%s' % data)
        if not data or data == 'exit':
            break

        # 解析消息并转发给对应客户端
        message, to = re.findall('MESSAGE:(.+?) TO:(.+?)', data)[0]
        newMessage = 'From: ' + frName + ' Message: ' + message
        Clients[to].send(newMessage.encode('utf-8'))

    # 客户端断开
    clientSocket.close()
    del Clients[frName]
    print('地址为%s:%d, 名字为%s的客户端已断开' % (addr[0], addr[1], frName))
    pass


if __name__ == '__main__':
    ServerSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM);
    ServerSocket.bind(('127.0.0.1', 9999))
    ServerSocket.listen(5)
    print('监听中')
    while True:
        clientSocket, addr = ServerSocket.accept()
        threading.Thread(target=tcpLink, args=(clientSocket, addr)).start()
    pass







import socket
import threading
import time

ServerAddr = ('127.0.0.1', 9999)
Client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)


def sendToClient():
    while True:
        newMessage = input()
        # newMessage = 'MESSAGE:' + message + 'TO:' + to
        Client.send(newMessage.encode('utf-8'))


def recvFromServer():
    while True:
        data = Client.recv(1024)
        data = data.decode('utf-8')
        print(data)


if __name__ == '__main__':
    print('尝试连接')
    Client.connect(ServerAddr)
    print('连接成功')
    Client.send(input('请输入你的名字:').encode('utf-8'))

    t1 = threading.Thread(target=sendToClient)
    t2 = threading.Thread(target=recvFromServer)
    t1.start()
    t2.start()
    t1.join()
    t2.join()

    Client.close()
    print('客户端关闭')